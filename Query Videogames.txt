QUERY select:

1- Selezionare tutte le software house americane (3) OK

SELECT * 
FROM software_houses
WHERE country ='United States';


2- Selezionare tutti i giocatori della città di 'Rogahnland' (2) OK

SELECT * 
FROM players
WHERE city ='Rogahnland';


3- Selezionare tutti i giocatori il cui nome finisce per "a" (220) OK

SELECT * 
FROM players
WHERE name LIKE '%a';

4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11) OK

SELECT * 
FROM reviews
WHERE player_id = '800';

5- Contare quanti tornei ci sono stati nell'anno 2015 (9) OK

SELECT COUNT(*)
FROM tournaments
WHERE year = '2015';


6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2) OK

SELECT *
FROM awards
WHERE description LIKE '%facere%'


7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287) OK

SELECT DISTINCT videogame_id
FROM category_videogame
WHERE category_id IN (2,6);


8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947) OK

SELECT * 
FROM reviews
WHERE rating BETWEEN 2 AND 4;


9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46) OK

SELECT * 
FROM videogames
WHERE YEAR (release_date) = 2020;



10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da 5 stelle, mostrandoli una sola volta (443) OK

SELECT DISTINCT videogame_id
from reviews
where rating = 5;


Query GROUP BY:


1- Contare quante software house ci sono per ogni paese (3) OK

SELECT country, COUNT(*) AS software_house_by_country
FROM software_houses
GROUP BY country;


2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500) OK

SELECT videogame_id, COUNT(*) AS reviews_number
FROM reviews
GROUP BY videogame_id;


3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13) OK

SELECT pegi_label_id, COUNT(*) AS pegi_games
from pegi_label_videogame
GROUP BY pegi_label_id;


4- Mostrare il numero di videogiochi rilasciati ogni anno (11) OK

SELECT YEAR (release_date) AS year, COUNT(*) AS videogames_for_year
FROM videogames
GROUP BY YEAR (release_date);

5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7) OK

SELECT device_videogame.device_id, COUNT(*) AS videogames_for_device
FROM device_videogame
GROUP BY device_videogame.device_id;

6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500) OK

SELECT reviews.videogame_id, AVG(rating) AS average_rating
FROM reviews
GROUP BY  reviews.videogame_id
ORDER BY average_rating DESC;


Query con JOIN:


1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996) OK

SELECT DISTINCT player_id
FROM players
JOIN reviews ON player_id = reviews.player_id


2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226) OK

SELECT DISTINCT videogames.name
FROM videogames
JOIN tournament_videogame ON videogames.id = tournament_videogame.videogame_id
JOIN tournaments ON tournament_videogame.tournament_id = tournaments.id
WHERE tournaments.year = 2016

3- Mostrare le categorie di ogni videogioco (1718) OK

SELECT videogames.name, categories.name AS category
FROM videogames
JOIN category_videogame ON videogames.id = category_videogame.videogame_id
JOIN categories ON category_videogame.category_id = categories.id;

4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6) OK

SELECT DISTINCT software_houses.name
FROM software_houses
JOIN videogames ON software_houses.id = videogames.software_house_id
WHERE YEAR(videogames.release_date) > 2020;


5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55) OK

SELECT awards.name, videogames.name
FROM awards
JOIN award_videogame ON award_videogame.award_id = awards.id
JOIN videogames ON award_videogame.videogame_id = videogames.id;

6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363) OK

SELECT categories.name,pegi_labels.name,videogames.name
FROM videogames
JOIN category_videogame ON videogames.id = category_videogame.videogame_id
JOIN categories ON category_videogame.category_id = categories.id
JOIN pegi_label_videogame ON videogames.id = pegi_label_videogame.videogame_id
JOIN pegi_labels ON pegi_label_videogame.pegi_label_id = pegi_labels.id
JOIN reviews ON videogames.id = reviews.videogame_id
WHERE reviews.rating > 3
GROUP BY categories.name,pegi_labels.name,videogames.name


7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474) OK

SELECT DISTINCT videogames.id, videogames.name
FROM videogames
JOIN tournament_videogame ON videogames.id = tournament_videogame.videogame_id 
JOIN tournaments ON tournaments.id = tournament_videogame.tournament_id 
JOIN player_tournament ON tournaments.id = player_tournament.tournament_id
JOIN players ON player_tournament.player_id = players.id 
WHERE players.name LIKE '%s';



8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36) OK

SELECT DISTINCT tournaments.*
FROM tournaments 
JOIN tournament_videogame ON tournament_videogame.tournament_id  = tournaments.id
JOIN videogames ON videogames.id = tournament_videogame.videogame_id 
JOIN award_videogame ON award_videogame.videogame_id = videogames.id 
JOIN awards ON awards.id = award_videogame.award_id 
WHERE award_videogame.year = 2018 and awards.id = 1


9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306) OK


select players.*, award_videogame.year , awards.name 
from tournaments
join tournament_videogame on tournament_videogame.tournament_id  = tournaments.id
join videogames on videogames.id = tournament_videogame.videogame_id 
join award_videogame on award_videogame.videogame_id = videogames.id 
join awards on awards.id = award_videogame.award_id 
join player_tournament on player_tournament.tournament_id  = tournaments.id 
join players on player_tournament.player_id = players.id 
where awards.name like 'Gioco più attesoo' and award_videogame.year = 2018 and tournaments.year = 2019








